version: "3"
services:
  radarr:
    image: linuxserver/radarr
    container_name: autopirate_radarr
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      - web
    env_file:
      - autopirate.env
    volumes:
      - "${MEDIA_DIR}/Video/Movies:/movies"
      - "${DOCKER_DATA}/radarr_config:/config"
      - "${NZB_DIR}:/downloads"
    labels:
      - traefik.http.routers.radarr.rule=Host(`radarr.jafner.net`)
      - traefik.http.routers.radarr.tls.certresolver=lets-encrypt
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=lan-only@file,traefik-forward-auth-privileged@file

  sonarr:
    image: linuxserver/sonarr
    container_name: autopirate_sonarr
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      - web
    env_file:
      - autopirate.env
    volumes:
      - "${MEDIA_DIR}/Video/Shows:/shows"
      - "${DOCKER_DATA}/sonarr_config:/config"
      - "${NZB_DIR}:/downloads"
    labels:
      - traefik.http.routers.sonarr.rule=Host(`sonarr.jafner.net`)
      - traefik.http.routers.sonarr.tls.certresolver=lets-encrypt
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=lan-only@file,traefik-forward-auth-privileged@file

  lidarr:
    image: linuxserver/lidarr
    container_name: autopirate_lidarr
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      - web
    env_file:
      - autopirate.env
    volumes:
      - "${DOCKER_DATA}/lidarr:/config"
      - "${NZB_DIR}:/downloads"
      - "${MEDIA_DIR}/Audio/Music:/music"
    labels:
      - traefik.http.routers.lidarr.rule=Host(`lidarr.jafner.net`)
      - traefik.http.routers.lidarr.tls.certresolver=lets-encrypt
      - trarfik.http.services.lidarr.loadbalancer.server.port=8686
      - traefik.http.routers.lidarr.middlewares=lan-only@file,traefik-forward-auth-privileged@file

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: autopirate_bazarr
    logging: 
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      - web
    env_file:
      - autopirate.env
    volumes:
      - "${DOCKER_DATA_LOCAL}/bazarr:/config"
      - "${MEDIA_DIR}/Video/Movies:/movies"
      - "${MEDIA_DIR}/Video/Shows:/tv"
    labels:
      - traefik.http.routers.bazarr.rule=Host(`bazarr.jafner.net`)
      - traefik.http.routers.bazarr.tls.certresolver=lets-encrypt
      - trarfik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.middlewares=lan-only@file,traefik-forward-auth-privileged@file

  nzbhydra2:
    image: linuxserver/nzbhydra2
    container_name: autopirate_nzbhydra2
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      - web
    env_file:
      - autopirate.env
    volumes:
      - "${DOCKER_DATA}/nzbhydra2_config:/config"
      - "${NZB_DIR}:/downloads"
    labels:
      - traefik.http.routers.nzbhydra2.rule=Host(`nzbhydra.jafner.net`)
      - traefik.http.routers.nzbhydra2.tls.certresolver=lets-encrypt
      - traefik.http.services.nzbhydra2.loadbalancer.server.port=5076
      - traefik.http.routers.nzbhydra2.middlewares=lan-only@file,traefik-forward-auth-privileged@file
  
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: autopirate_sabnzbd
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      - web
      - monitoring
    env_file:
      - autopirate.env
    ports:
      - 8085:8080
    volumes:
      - "${DOCKER_DATA}/sabnzbd_config:/config"
      - "${MEDIA_DIR}/Video/Movies:/movies"
      - "${MEDIA_DIR}/Video/Shows:/shows"
      - "${MEDIA_DIR}/Audio/Music:/music"
      - "${NZB_DIR}:/downloads"
      - "${INCOMPLETE_NZB_DIR}:/incomplete-downloads"
    labels:
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.jafner.net`)
      - traefik.http.routers.sabnzbd.tls.certresolver=lets-encrypt
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
      - traefik.http.routers.sabnzbd.middlewares=lan-only@file,traefik-forward-auth-privileged@file

  tdarr:
    image: haveagitgat/tdarr:latest
    container_name: autopirate_tdarr
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      web:
      tdarr: 
        ipv4_address: 172.110.0.10
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
      - 8267:8267 # node port
    labels:
      - traefik.http.routers.tdarr.rule=Host(`tdarr.jafner.net`)
      - traefik.http.routers.tdarr.tls.certresolver=lets-encrypt
      - traefik.http.routers.tdarr.middlewares=lan-only@file,traefik-forward-auth-privileged@file
      - traefik.http.services.tdarr.loadbalancer.server.port=8265
    env_file:
      - autopirate.env
      - tdarr.env
    volumes:
      - ${DOCKER_DATA}/tdarr/server:/app/server
      - ${DOCKER_DATA}/tdarr/configs:/app/configs
      - ${DOCKER_DATA}/tdarr/logs:/app/logs
      - ${MEDIA_DIR}/Video/Movies:/movies
      - ${MEDIA_DIR}/Video/Shows:/shows
      - ${TRANSCODE_DIR}/transcode_cache:/temp

  tdarr-node:
    image: haveagitgat/tdarr_node:latest
    container_name: autopirate_tdarr-node
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
        limits:
          cpus: '12.00'
    networks:
      tdarr:
        ipv4_address: 172.110.0.20
    env_file:
      - autopirate.env
      - tdarr_node.env
    volumes:
      - ${DOCKER_DATA}/tdarr/configs:/app/configs
      - ${DOCKER_DATA}/tdarr/logs:/app/logs
      - ${MEDIA_DIR}/Video/Movies:/movies
      - ${MEDIA_DIR}/Video/Shows:/shows
      - ${TRANSCODE_DIR}/transcode_cache:/temp

  jackett:
    image: linuxserver/jackett
    container_name: autopirate_jackett
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      - web
    env_file:
      - autopirate.env
      - jackett.env
    volumes:
      - "${DOCKER_DATA}/jackett_config:/config"
      - "${NZB_DIR}:/downloads"
    labels:
      - traefik.http.routers.jackett.rule=Host(`jackett.jafner.net`)
      - traefik.http.routers.jackett.tls.certresolver=lets-encrypt
      - traefik.http.services.jackett.loadbalancer.server.port=9117
      - traefik.http.routers.jackett.middlewares=lan-only@file,traefik-forward-auth-privileged@file

  exporter-sabnzbd:
    image: msroest/sabnzbd_exporter # https://github.com/msroest/sabnzbd_exporter
    container_name: autopirate_sabnzbd-exporter
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    restart: "no"
    networks:
      - monitoring
    env_file:
      - exporter-sabnzbd.env
      - exporter-sabnzbd_secrets.env

networks:
  tdarr:
    ipam:
      driver: default
      config:
        - subnet: "172.110.0.0/24"
  web:
    external: true
  monitoring:
    external: true
