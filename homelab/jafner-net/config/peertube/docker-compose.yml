version: "3.3"

services:
  peertube:
    image: chocobozzz/peertube:production-buster
    container_name: peertube_peertube
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-batch-size: "50"
        loki-retries: "1"
        loki-timeout: "2s"
        keep-file: "true"
    networks:
      web:
      peertube:
        ipv4_address: 172.80.0.42
    env_file:
      - peertube.env
      - peertube_secrets.env
    ports:
     - "11935:1935" # Livestream RTMP port
    volumes:
      - assets:/app/client/dist
      #- nas:/data
      - ${PEERTUBE_DATA_VOLUME}:/data
      - ${PEERTUBE_CONFIG_VOLUME}:/config
    labels:
      - "traefik.http.routers.peertube.rule=Host(`video.jafner.net`)"
      - "traefik.http.routers.peertube.tls.certresolver=lets-encrypt"
      - "traefik.http.services.peertube.loadbalancer.server.port=9000"
    depends_on:
      - postgres
      - redis
      - postfix
    restart: "no"

  postgres:
    image: postgres:13-alpine
    container_name: peertube_postgres
    networks:
      - peertube
    env_file:
      - postgres.env
      - postgres_secrets.env
    volumes:
      - ${POSTGRES_CONFIG_VOLUME}:/var/lib/postgresql/data
    restart: "no"

  redis:
    image: redis:6-alpine
    container_name: peertube_redis
    networks:
      - peertube
    volumes:
      - ${REDIS_CONFIG_VOLUME}:/data
    restart: "no"

  postfix:
    image: mwader/postfix-relay
    container_name: peertube_postfix
    networks:
      - peertube
    env_file:
      - postfix.env
    volumes:
      - ${POSTFIX_CONFIG_VOLUME}:/etc/opendkim/keys
    restart: "no"

networks:
  peertube:
    ipam:
      driver: default
      config:
      - subnet: 172.80.0.0/16
  web:
    external: true

volumes:
  assets:
  #nas:
  #  driver: local
  #  driver_opts:
  #    type: cifs
  #    device: //192.168.50.1/AppData
  #    o: "user=user,pass=resu,uid=1000,gid=1000,_netdev,vers=3.0"
