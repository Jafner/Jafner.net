services:
  zipline:
    image: ghcr.io/diced/zipline:latest
    container_name: zipline_zipline
    restart: unless-stopped
    networks:
      - zipline
      - web
    environment:
      MFA_TOTP_ENABLED: true
      WEBSITE_SHOW_FILES_PER_USER: true
      WEBSITE_TITLE: Jafner.net
      CORE_RETURN_HTTPS: true
      CORE_HOST: 0.0.0.0
      CORE_PORT: 3000
      CORE_LOGGER: true
      UPLOADER_ASSUME_MIMETYPES: true
      DATASOURCE_TYPE: local
      DATASOURCE_LOCAL_DIRECTORY: /uploads
      UPLOADER_ADMIN_LIMIT: 25gb
      UPLOADER_USER_LIMIT: 100mb
    env_file:
      - path: /run/secrets/zipline/zipline
        required: true
    volumes:
      - $APPDATA/zipline/uploads:/uploads
      - $APPDATA/zipline/public:/public
    labels:
      - traefik.http.routers.zipline.rule=Host(`zipline.jafner.net`)
      - traefik.http.routers.zipline.tls.certresolver=lets-encrypt
      - traefik.http.routers.zipline.tls.options=tls12@file
      - traefik.http.services.zipline.loadbalancer.server.port=3000

  postgres:
    image: postgres:15
    container_name: zipline_postgres
    restart: unless-stopped
    networks:
      zipline:
        aliases:
          - postgres
    environment:
      POSTGRES_USER: zipline
      POSTGRES_DATABASE: zipline
    env_file:
      - path: /run/secrets/zipline/postgres
        required: true
    volumes:
      - $APPDATA/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U zipline']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  web:
    external: true
  zipline: